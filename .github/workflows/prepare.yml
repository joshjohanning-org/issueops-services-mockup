# Parses migration issue and creates a comment with next step

name: Prepare

on:
  issues:
    types: [opened, edited]

jobs:
  prepare:
    name: Prepare Migration
    runs-on: ubuntu-latest

    if: github.event_name == 'issues' &&
      (github.event.action == 'opened' || github.event.action == 'edited') &&
      contains(github.event.issue.labels.*.name, 'new-service')

    steps:     
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"

      - uses: stefanbuck/github-issue-parser@v3.0.1
        id: issue-parser

      - name: Post prepare message
        uses: actions/github-script@v6
        with:
          script: |
            let commentBody
            var enableProjects = ${{ steps.issue-parser.outputs.issueparser_enable_projects }} || no;
            commentBody = `ðŸ‘‹ Thank you for opening this new repo issue, @${{ github.actor }}.
            The following has been parsed from your issue body:
            - The **repo name** is set to be: **\`${{ steps.issue-parser.outputs.issueparser_repo_name }}\`**
            - The **repo visibility** is set to be: **\`${{ steps.issue-parser.outputs.issueparser_repo_visibility }}\`**
            - The **team write permissions** is set to be: **\`${{ steps.issue-parser.outputs.issueparser_team_write_permissions }}\`**
            - The **team admin permissions** is set to be: **\`${{ steps.issue-parser.outputs.issueparser_team_admin_permissions }}\`**
            - Enable Issues?: **\`${{ steps.issue-parser.outputs.issueparser_enable_issues }}\`**
            - Enable Projects?: **\`${enableProjects}\`**
            - Extra features?: **\`${{ steps.issue-parser.outputs.issueparser_extra_features }}\`**
            
            ## Create the repo
            Add the following comment to this issue in order to create the repo:
          
            \`\`\`
            /create-service
            \`\`\`
            `
            await github.rest.issues.createComment({
              issue_number: ${{ github.event.issue.number }},
              owner: '${{ github.REPOSITORY_OWNER }}',
              repo: '${{ github.event.repository.name }}',
              body: commentBody.replace(/  +/g, '')
            })
            
      - name: Post failure message
        if: ${{ failure() }}
        uses: actions/github-script@v6
        with:
          script: |
            let commentBody
            commentBody = `ðŸ˜¢ The issue body could not be parsed, @${{ github.actor }}. Please open a new issue using the issue template and ensure your formatting and line spacing remains untouched.`
            await github.rest.issues.createComment({
              issue_number: ${{ github.event.issue.number }},
              owner: '${{ github.REPOSITORY_OWNER }}',
              repo: '${{ github.event.repository.name }}',
              body: commentBody.replace(/  +/g, '')
            })
